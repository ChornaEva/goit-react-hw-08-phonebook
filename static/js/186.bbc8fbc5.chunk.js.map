{"version":3,"file":"static/js/186.bbc8fbc5.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PhonebookTitle = styled.h1`\n  padding: 20px;\n  margin: 0;\n`;\n\nexport const PhonebookInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  padding: 0;\n  margin: 10px;\n  margin-left: 5px;\n`;\nexport const PhonebookLabel = styled.label`\n  list-style: none;\n  padding: 0;\n  margin: 5px;\n`;\n\nexport const PhonebookInput = styled.input`\n  list-style: none;\n  padding: 5px;\n  margin-left: 5px;\n  width: 250px;\n  height: 32px;\n  background-color: rgba(255, 255, 255, 0.4);\n  border-radius: 4px;\n  border: none;\n  outline: none;\n`;\n\nexport const AddButton = styled.button`\n  border-radius: 4px;\n  border: none;\n  width: 120px;\n  height: 25px;\n  text-transform: capitalize;\n  margin: 10px;\n  padding: 0;\n  background-color: rgba(255, 255, 255, 0.4);\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  &:hover {\n    background-color: #1976d2;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport {\n  PhonebookTitle,\n  PhonebookInputWrapper,\n  PhonebookLabel,\n  PhonebookInput,\n  AddButton,\n} from './ContactForm.styled';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'services/contactsApi';\n\nconst ContactForm = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (contacts?.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const user = { name, phone: number };\n\n      addContact(user);\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <div>\n        <PhonebookTitle>Phonebook</PhonebookTitle>\n        <PhonebookInputWrapper>\n          <PhonebookLabel htmlFor={nameInputId}>\n            <PhonebookInput\n              name=\"name\"\n              type=\"text\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={name}\n              placeholder=\"Name\"\n              onChange={handleInputChange}\n              id={nameInputId}\n            />\n          </PhonebookLabel>\n          <PhonebookLabel htmlFor={numberInputId}>\n            <PhonebookInput\n              name=\"number\"\n              type=\"text\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n              placeholder=\"Number\"\n              onChange={handleInputChange}\n              id={numberInputId}\n            />\n          </PhonebookLabel>\n          <AddButton type=\"submit\">Add contact</AddButton>\n        </PhonebookInputWrapper>\n      </div>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const UsersContactList = styled.ul`\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  padding-bottom: 10px;\n  padding-top: 5px;\n  margin: 0;\n`;\n\nexport const ContactListItem = styled.li`\n  padding: 7px 20px;\n  margin-bottom: 10px;\n  margin: 10px;\n  border-radius: 5px;\n  border-left: 10px solid #1976d2;\n  box-shadow: 2px -2px 5px 0 rgba(0, 0, 0, 0.1),\n    -2px -2px 5px 0 rgba(0, 0, 0, 0.1), 2px 2px 5px 0 rgba(0, 0, 0, 0.1),\n    -2px 2px 5px 0 rgba(0, 0, 0, 0.1);\n  font-size: 18px;\n  letter-spacing: 2px;\n  transition: 0.3s all linear;\n`;\n\nexport const UserName = styled.p`\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  margin: 5px;\n  padding: 0;\n`;\n\nexport const UserNumber = styled.p`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  color: gray;\n  margin: 5px;\n  padding: 0;\n`;\n\nexport const ContactListButton = styled.button`\n  border-radius: 4px;\n  border: none;\n  width: 60px;\n  height: 20px;\n  text-transform: capitalize;\n  background-color: rgba(255, 255, 255, 0.4);\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  &:hover {\n    background-color: #1976d2;\n    color: white;\n  }\n`;\n","export const getFilter = state => state.contacts.filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useDeleteContactMutation,\n  useFetchContactsQuery,\n} from 'services/contactsApi';\nimport {\n  UsersContactList,\n  ContactListItem,\n  UserName,\n  UserNumber,\n  ContactListButton,\n} from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport { TailSpin } from 'react-loader-spinner';\n\nconst ContactList = () => {\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filter = useSelector(getFilter);\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n  return (\n    <div>\n      {isFetching && <TailSpin color=\"#1976d2\" />}\n      <UsersContactList>\n        {filteredContacts?.map(contact => (\n          <ContactListItem key={contact.id}>\n            <UserName>{contact.name}</UserName>\n            <UserNumber>{contact.phone}</UserNumber>\n            <ContactListButton onClick={() => deleteContact(contact.id)}>\n              Delete\n            </ContactListButton>\n          </ContactListItem>\n        ))}\n      </UsersContactList>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  justify-content: flex-start;\n  list-style: none;\n  padding: 0;\n  margin: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  display: flex;\n  justify-content: flex-start;\n  list-style: none;\n  margin-left: 5px;\n  margin-right: 5px;\n  width: 250px;\n  height: 30px;\n  padding: 5px;\n  background-color: rgba(255, 255, 255, 0.4);\n  border-radius: 4px;\n  border: none;\n  outline: none;\n`;\n","import React from 'react';\nimport { FilterLabel, FilterInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  // сохраняем в стейт данные фильтра\n  const onChange = event => {\n    const { value } = event.currentTarget;\n    dispatch(changeFilter(value));\n  };\n  return (\n    <FilterLabel>\n      <FilterInput\n        name=\"filter\"\n        type=\"text\"\n        placeholder=\"Find contacts by name\"\n        onChange={onChange}\n      ></FilterInput>\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import { ContactsTitle, FormContainer } from \"App.styled\";\nimport ContactForm from \"components/ContactForm\";\nimport ContactList from \"components/ContactList\";\nimport Filter from \"components/Filter\";\n\nconst Contacts = () => {\n    return (\n    <FormContainer>\n        <ContactForm />\n        <ContactsTitle>Contacts</ContactsTitle>\n        <Filter />\n        <ContactList />\n      </FormContainer> \n\n    );\n}\n\nexport default Contacts;"],"names":["PhonebookTitle","styled","PhonebookInputWrapper","PhonebookLabel","PhonebookInput","AddButton","contacts","useFetchContactsQuery","data","useAddContactMutation","addContact","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","reset","nameInputId","shortid","numberInputId","autoComplete","onSubmit","preventDefault","find","contact","alert","phone","htmlFor","type","pattern","title","required","placeholder","onChange","id","UsersContactList","ContactListItem","UserName","UserNumber","ContactListButton","getFilter","state","filter","isFetching","useDeleteContactMutation","deleteContact","normalizedFilter","useSelector","toLowerCase","filteredContacts","includes","color","map","onClick","FilterLabel","FilterInput","dispatch","useDispatch","changeFilter"],"sourceRoot":""}