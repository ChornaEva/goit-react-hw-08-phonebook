{"version":3,"file":"static/js/577.e86a0c1b.chunk.js","mappings":"kQA2BA,GAzBYA,E,QAAAA,K,uCC8FZ,EAnFc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAWN,OACE,UAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,WACE,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,UACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,yBAKJ,UAAC,EAAD,CACED,UAAU,OACVE,SAlBe,SAAAC,GACnBA,EAAMC,iBACNtB,EAASuB,EAAAA,EAAAA,MAAqB,CAAEpB,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,KAeRkB,GAAI,CAAEC,GAAI,GAHZ,WAKE,SAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,QACNT,QAAQ,WACRU,KAAK,OACLpB,KAAK,QACLC,MAAOP,EACP2B,SAAUvB,EACVwB,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,aAAa,YAEf,SAACR,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,WACNT,QAAQ,WACRU,KAAK,OACLpB,KAAK,WACLC,MAAOL,EACPyB,SAAUvB,EACVwB,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,aAAa,YAEf,SAACC,EAAA,EAAD,CACEhB,QAAQ,WACRU,KAAK,SACLI,WAAS,EACTT,GAAI,CAAEC,GAAI,EAAGW,GAAI,GAJnB,qBAQA,SAACvB,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,UACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACqB,EAAA,EAAD,CAAMC,KAAK,YAAYnB,QAAQ,QAAQoB,UAAU,QAAjD","sources":["../node_modules/@mui/system/esm/Box/Box.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import {\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography,\n  Grid,\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth/auth-operation';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Grid container justifyContent=\"center\">\n        <Grid item>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log In\n          </Typography>\n        </Grid>\n      </Grid>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{ mt: 1 }}\n      >\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Email\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          margin=\"normal\"\n          required\n          fullWidth\n          defaultValue=\"Normal\"\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          margin=\"normal\"\n          required\n          fullWidth\n          defaultValue=\"Normal\"\n        />\n        <Button\n          variant=\"outlined\"\n          type=\"submit\"\n          fullWidth\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Log in\n        </Button>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            <Link href=\"/register\" variant=\"body2\" underline=\"hover\">\n              Don't have an account? Register\n            </Link>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["createBox","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","Container","maxWidth","Grid","container","justifyContent","item","Typography","component","variant","onSubmit","event","preventDefault","authOperations","sx","mt","TextField","id","label","type","onChange","margin","required","fullWidth","defaultValue","Button","mb","Link","href","underline"],"sourceRoot":""}